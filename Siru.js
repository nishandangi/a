
const shayaris = [ 
  "अपुरो  बयान गर्ला त्यो ऐनाले तिम्रो सुन्दरता !<br>हेर त मेरा आँखामा, कति अनुपम छौ तिमी !!",
  "तिमी मलाई  यति भुल्नु कि, तिमी जीउन सकौँ!<br>म तिमीलाई यति सम्झन्छु कि ,म जीउन सकुँ !!",
  "तिमी मेरी म तिम्रो हुन सकेनौ ऐलेलाई,<br>अहँ! यो प्रेमकयौं जुनि सम्म सकिदैन ।।",
  "चोट सानो होस् या ठूलो, जस्तोसुकै होस् !<br>तिम्रा यादहरु हरेकका मल्हम बनिदिन्छन् !!",
  "जो  तिमीसङ्ग  बिते  ती दिनहरु!<br>सायद! त्यतिमात्र मेरो जिन्दगी हुन्थ्यो !!",
  "मेरो हाल म आफैलाई थाहा हुन्न !<br>मैले अरुबाटै सुनेको कि उदास छु म !!",
  "अहो! एक सुन्दर भेट!<br>ब्युझिएर पो थाहा पाएँ, यो त सपनी रहेछ ।",
  "'तिम्रो नाम' एक नाम मात्र होइन् !<br>सुकूनको मीठो एक स्पर्श पनि हो !!",
  "तिमीलाई पीडा हुने कुरा यदि म बोल्दैछु भने-<br> सम्झनु तिमी, म झुट बोल्दैछु ।",
 "'मेरो नाम' कुनै दिन तिम्रो मनमा गुन्जियो भने-<br> सम्झनु, मेरा नयनहरु तिम्रै बाटो कुर्दैछन !!",
    
  "थाहा छ, तिमी मेरी हौ!<br>थाहा छ, यो झुट हो !!"
];


const audio = document.getElementById("sn"); function playAudio() { audio.play(); }audio.addEventListener("ended", function () { document.body.style.display = "none";document.exitFullscreen();});
document.getElementById("in").addEventListener("click", async () => { const username = document.getElementById("username").value.trim(), password = document.getElementById("password").value.trim(); if (username && password) { const response = await validateUser(username, password); if (response.success) { localStorage.setItem("loggedInUsername", username); localStorage.setItem("loggedInPassword", password); const baseURL = "https://nishandangi.github.io/a/"; document.getElementById("userImage1").src = `${baseURL}${username}_${password}a.png`; document.getElementById("userImage2").src = `${baseURL}${username}_${password}b.png`; document.getElementById("userImage3").src = `${baseURL}${username}_${password}c.png`; document.getElementById("userImage4").src = `${baseURL}${username}_${password}d.png`; document.getElementById("userImage5").src = `${baseURL}${username}_${password}e.png`; const audioSource = `${baseURL}${username}_${password}.mp3`; console.log(`Loading audio: ${audioSource}`); document.getElementById("audioSource").src = audioSource; document.getElementById("sn").load(); document.querySelector(".login-container").style.display = "none";document.documentElement.requestFullscreen();document.getElementById("img").style.display = "inline"; let currentIndex = 0; function updateShayari() { const sayariDiv = document.getElementById("sayari"); sayariDiv.innerHTML = shayaris[currentIndex]; sayariDiv.classList.add("show"); setTimeout(() => { sayariDiv.classList.remove("show"); }, 19000); currentIndex = (currentIndex + 1) % shayaris.length; } updateShayari(); setInterval(updateShayari, 20000); playAudio();} else { alert(response.message || "Invalid username or password."); } } else { alert("Please enter both username and password."); } }); async function validateUser(username, password) { const url = "https://script.google.com/macros/s/AKfycbww46sGfGv8UnfFGUMQalRB4E4rB7Du0ap0lA4IEtWv456JTIzBM57Bf-8pEsRQtwll/exec"; try { const response = await fetch(url, { method: "POST", headers: { "Content-Type": "application/x-www-form-urlencoded" }, body: `username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}` }); return await response.json(); } catch (error) { console.error("Error validating user:", error); return { success: false, message: "Unable to validate user. Please try again." }; } }
//event manage
let currentImageIndex = 0, images = [document.getElementById("userImage1"), document.getElementById("userImage2"), document.getElementById("userImage3"), document.getElementById("userImage4"), document.getElementById("userImage5")]; function updateImageVisibility() { images.forEach((image, index) => { image.style.visibility = index === currentImageIndex ? "visible" : "hidden"; image.style.opacity = index === currentImageIndex ? "1" : "0"; }); } function swipeLeft() { currentImageIndex = (currentImageIndex + 1) % images.length; updateImageVisibility(); } function swipeRight() { currentImageIndex = (currentImageIndex - 1 + images.length) % images.length; updateImageVisibility(); } document.addEventListener("keydown", (event) => { if (event.key === "ArrowRight") swipeLeft(); else if (event.key === "ArrowLeft") swipeRight(); }); let touchStartX = 0; document.addEventListener("touchstart", (event) => { touchStartX = event.touches[0].clientX; }); document.addEventListener("touchend", (event) => { const touchEndX = event.changedTouches[0].clientX, swipeThreshold = 50; if (touchStartX - touchEndX > swipeThreshold) swipeLeft(); else if (touchEndX - touchStartX > swipeThreshold) swipeRight(); }); updateImageVisibility();setInterval(swipeLeft, 20000);
